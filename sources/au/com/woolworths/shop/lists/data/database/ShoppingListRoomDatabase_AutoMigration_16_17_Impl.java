package au.com.woolworths.shop.lists.data.database;

import android.database.SQLException;
import androidx.room.migration.Migration;
import androidx.sqlite.db.SupportSQLiteDatabase;
import androidx.sqlite.db.framework.FrameworkSQLiteDatabase;
import kotlin.Metadata;

@Metadata(d1 = {"\u0000\n\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\b\u0000\u0018\u00002\u00020\u0001Â¨\u0006\u0002"}, d2 = {"Lau/com/woolworths/shop/lists/data/database/ShoppingListRoomDatabase_AutoMigration_16_17_Impl;", "Landroidx/room/migration/Migration;", "shop-lists-data_release"}, k = 1, mv = {2, 1, 0}, xi = 48)
/* loaded from: classes.dex */
public final class ShoppingListRoomDatabase_AutoMigration_16_17_Impl extends Migration {
    @Override // androidx.room.migration.Migration
    public final void migrate(SupportSQLiteDatabase supportSQLiteDatabase) throws SQLException {
        FrameworkSQLiteDatabase frameworkSQLiteDatabase = (FrameworkSQLiteDatabase) supportSQLiteDatabase;
        frameworkSQLiteDatabase.c1("CREATE TABLE IF NOT EXISTS `_new_product` (`product_id` TEXT NOT NULL, `name` TEXT NOT NULL, `product_image` TEXT, `badge_image` TEXT, `price` INTEGER, `unit_price` TEXT, `available` INTEGER NOT NULL, `was_price` TEXT, `multibuy_price` TEXT, `multibuy_unitprice` TEXT, `purchase_warning` TEXT, `inline_labels` TEXT, `disclaimer` TEXT, `tobacco` INTEGER, `source` TEXT, `listminimum` REAL NOT NULL, `listmaximum` REAL NOT NULL, `listincrement` REAL NOT NULL, `listdefault_` REAL NOT NULL, `listunitLabel` TEXT, `instore_detailslocationText` TEXT, `instore_detailslocationType` TEXT, `promo_infotype` TEXT, `promo_infolabel` TEXT, `offer_info_offerId` TEXT, `offer_info_displayStatus` TEXT, `offer_info_displayExpiry` TEXT, `offer_info_minimumSpend` TEXT, `offer_info_offerStatus` TEXT, `offer_info_offerAnalytics` TEXT, `offer_info_boostButton` TEXT, `tag_label_text` TEXT, `tag_label_style` TEXT, `in_store_availability_info_button` TEXT, `in_store_availability_info_status` TEXT, `in_store_availability_info_infoSheet` TEXT, `marketplace_info_imageUrl` TEXT, `marketplace_info_title` TEXT, `marketplace_info_sellerName` TEXT, `marketplace_info_brandName` TEXT, `multi_buy_price_info_price` TEXT, `multi_buy_price_info_unitPrice` TEXT, `member_price_info_header` TEXT, `member_price_info_title` TEXT, `member_price_info_subtitle` TEXT, `instore_location_data_details` TEXT, `instore_location_data_displayInfo` TEXT, PRIMARY KEY(`product_id`))");
        frameworkSQLiteDatabase.c1("INSERT INTO `_new_product` (`product_id`,`name`,`product_image`,`badge_image`,`price`,`unit_price`,`available`,`was_price`,`multibuy_price`,`multibuy_unitprice`,`purchase_warning`,`inline_labels`,`disclaimer`,`tobacco`,`source`,`listminimum`,`listmaximum`,`listincrement`,`listdefault_`,`listunitLabel`,`instore_detailslocationText`,`instore_detailslocationType`,`promo_infotype`,`promo_infolabel`,`offer_info_offerId`,`offer_info_displayStatus`,`offer_info_displayExpiry`,`offer_info_minimumSpend`,`offer_info_offerStatus`,`offer_info_offerAnalytics`,`offer_info_boostButton`,`tag_label_text`,`tag_label_style`,`in_store_availability_info_button`,`in_store_availability_info_status`,`in_store_availability_info_infoSheet`,`marketplace_info_imageUrl`,`marketplace_info_title`,`marketplace_info_sellerName`,`marketplace_info_brandName`,`multi_buy_price_info_price`,`multi_buy_price_info_unitPrice`,`member_price_info_header`,`member_price_info_title`,`member_price_info_subtitle`,`instore_location_data_details`,`instore_location_data_displayInfo`) SELECT `product_id`,`name`,`product_image`,`badge_image`,`price`,`unit_price`,`available`,`was_price`,`multibuy_price`,`multibuy_unitprice`,`purchase_warning`,`inline_labels`,`disclaimer`,`tobacco`,`source`,`listminimum`,`listmaximum`,`listincrement`,`listdefault_`,`listunitLabel`,`instore_detailslocationText`,`instore_detailslocationType`,`promo_infotype`,`promo_infolabel`,`offer_info_offerId`,`offer_info_displayStatus`,`offer_info_displayExpiry`,`offer_info_minimumSpend`,`offer_info_offerStatus`,`offer_info_offerAnalytics`,`offer_info_boostButton`,`tag_label_text`,`tag_label_style`,`in_store_availability_info_button`,`in_store_availability_info_status`,`in_store_availability_info_infoSheet`,`marketplace_info_imageUrl`,`marketplace_info_title`,`marketplace_info_sellerName`,`marketplace_info_brandName`,`multi_buy_price_info_price`,`multi_buy_price_info_unitPrice`,`member_price_info_header`,`member_price_info_title`,`member_price_info_subtitle`,`instore_location_data_details`,`instore_location_data_displayInfo` FROM `product`");
        frameworkSQLiteDatabase.c1("DROP TABLE `product`");
        frameworkSQLiteDatabase.c1("ALTER TABLE `_new_product` RENAME TO `product`");
        frameworkSQLiteDatabase.c1("CREATE UNIQUE INDEX IF NOT EXISTS `index_product_product_id` ON `product` (`product_id`)");
    }
}
