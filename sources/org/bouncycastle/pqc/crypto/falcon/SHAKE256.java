package org.bouncycastle.pqc.crypto.falcon;

/* loaded from: classes8.dex */
class SHAKE256 {
    private long[] RC = {1, 32898, -9223372036854742902L, -9223372034707259392L, 32907, 2147483649L, -9223372034707259263L, -9223372036854743031L, 138, 136, 2147516425L, 2147483658L, 2147516555L, -9223372036854775669L, -9223372036854742903L, -9223372036854743037L, -9223372036854743038L, -9223372036854775680L, 32778, -9223372034707292150L, -9223372034707259263L, -9223372036854742912L, 2147483649L, -9223372034707259384L};
    long[] A = new long[25];
    byte[] dbuf = new byte[200];
    long dptr = 0;

    public void i_shake256_flip() {
        int i = (int) this.dptr;
        long[] jArr = this.A;
        int i2 = i >> 3;
        jArr[i2] = jArr[i2] ^ (31 << ((i & 7) << 3));
        jArr[16] = jArr[16] ^ Long.MIN_VALUE;
        this.dptr = 136L;
    }

    public void inner_shake256_extract(byte[] bArr, int i, int i2) {
        int i3 = (int) this.dptr;
        while (i2 > 0) {
            if (i3 == 136) {
                process_block(this.A);
                i3 = 0;
            }
            int i4 = 136 - i3;
            if (i4 > i2) {
                i4 = i2;
            }
            i2 -= i4;
            while (true) {
                int i5 = i4 - 1;
                if (i4 > 0) {
                    bArr[i] = (byte) (this.A[i3 >> 3] >>> ((i3 & 7) << 3));
                    i3++;
                    i++;
                    i4 = i5;
                }
            }
        }
        this.dptr = i3;
    }

    public void inner_shake256_init() {
        this.dptr = 0L;
        int i = 0;
        while (true) {
            long[] jArr = this.A;
            if (i >= jArr.length) {
                return;
            }
            jArr[i] = 0;
            i++;
        }
    }

    public void inner_shake256_inject(byte[] bArr, int i, int i2) {
        long j = this.dptr;
        int i3 = i;
        int i4 = i2;
        while (i4 > 0) {
            long j2 = 136;
            long j3 = 136 - j;
            long j4 = i4;
            if (j3 > j4) {
                j3 = j4;
            }
            long j5 = 0;
            while (j5 < j3) {
                long j6 = j5 + j;
                long[] jArr = this.A;
                long j7 = j2;
                int i5 = (int) (j6 >> 3);
                jArr[i5] = jArr[i5] ^ ((bArr[((int) j5) + i3] & 255) << ((int) ((j6 & 7) << 3)));
                j5++;
                j2 = j7;
            }
            j += j3;
            i3 = (int) (i3 + j3);
            i4 = (int) (j4 - j3);
            if (j == j2) {
                process_block(this.A);
                j = 0;
            }
        }
        this.dptr = j;
    }

    public void process_block(long[] jArr) {
        char c = 1;
        jArr[1] = ~jArr[1];
        char c2 = 2;
        jArr[2] = ~jArr[2];
        char c3 = '\b';
        jArr[8] = ~jArr[8];
        char c4 = '\f';
        jArr[12] = ~jArr[12];
        char c5 = 17;
        jArr[17] = ~jArr[17];
        char c6 = 20;
        jArr[20] = ~jArr[20];
        char c7 = 0;
        int i = 0;
        while (i < 24) {
            long j = jArr[c];
            long j2 = jArr[6];
            long j3 = jArr[11];
            long j4 = jArr[16];
            long j5 = jArr[21];
            long j6 = (j ^ j2) ^ (j5 ^ (j3 ^ j4));
            long j7 = jArr[4];
            long j8 = jArr[9];
            long j9 = jArr[14];
            long j10 = jArr[19];
            long j11 = jArr[24];
            long j12 = (((j6 << c) | (j6 >>> 63)) ^ j11) ^ ((j7 ^ j8) ^ (j9 ^ j10));
            long j13 = jArr[c2];
            long j14 = jArr[7];
            long j15 = jArr[c4];
            long j16 = jArr[c5];
            long j17 = jArr[22];
            long j18 = (j13 ^ j14) ^ (j17 ^ (j15 ^ j16));
            long j19 = jArr[c7];
            long j20 = jArr[5];
            long j21 = jArr[10];
            long j22 = jArr[15];
            long j23 = jArr[c6];
            long j24 = (((j18 << c) | (j18 >>> 63)) ^ j23) ^ ((j19 ^ j20) ^ (j21 ^ j22));
            long j25 = jArr[3];
            long j26 = jArr[c3];
            long j27 = jArr[13];
            long j28 = jArr[18];
            long j29 = jArr[23];
            long j30 = (j25 ^ j26) ^ (j29 ^ (j27 ^ j28));
            long j31 = (((j30 << c) | (j30 >>> 63)) ^ j5) ^ ((j ^ j2) ^ (j3 ^ j4));
            long j32 = (j7 ^ j8) ^ (j11 ^ (j9 ^ j10));
            long j33 = (((j32 << c) | (j32 >>> 63)) ^ j17) ^ ((j13 ^ j14) ^ (j15 ^ j16));
            long j34 = (j19 ^ j20) ^ (j23 ^ (j21 ^ j22));
            long j35 = (((j34 << c) | (j34 >>> 63)) ^ j29) ^ ((j25 ^ j26) ^ (j27 ^ j28));
            long j36 = j19 ^ j12;
            jArr[c7] = j36;
            long j37 = j20 ^ j12;
            jArr[5] = j37;
            long j38 = j21 ^ j12;
            jArr[10] = j38;
            long j39 = j22 ^ j12;
            jArr[15] = j39;
            long j40 = j23 ^ j12;
            jArr[c6] = j40;
            long j41 = j ^ j24;
            jArr[c] = j41;
            long j42 = j2 ^ j24;
            jArr[6] = j42;
            long j43 = j3 ^ j24;
            jArr[11] = j43;
            long j44 = j4 ^ j24;
            jArr[16] = j44;
            long j45 = j5 ^ j24;
            jArr[21] = j45;
            long j46 = j13 ^ j31;
            jArr[c2] = j46;
            long j47 = j14 ^ j31;
            jArr[7] = j47;
            long j48 = j15 ^ j31;
            jArr[c4] = j48;
            long j49 = j16 ^ j31;
            jArr[c5] = j49;
            long j50 = j17 ^ j31;
            jArr[22] = j50;
            long j51 = j25 ^ j33;
            jArr[3] = j51;
            long j52 = j26 ^ j33;
            jArr[c3] = j52;
            long j53 = j27 ^ j33;
            jArr[13] = j53;
            long j54 = j28 ^ j33;
            jArr[18] = j54;
            long j55 = j29 ^ j33;
            jArr[23] = j55;
            long j56 = j7 ^ j35;
            jArr[4] = j56;
            long j57 = j8 ^ j35;
            jArr[9] = j57;
            long j58 = j9 ^ j35;
            jArr[14] = j58;
            long j59 = j10 ^ j35;
            jArr[19] = j59;
            long j60 = j11 ^ j35;
            jArr[24] = j60;
            long j61 = (j37 << 36) | (j37 >>> 28);
            jArr[5] = j61;
            long j62 = (j38 << 3) | (j38 >>> 61);
            jArr[10] = j62;
            long j63 = (j39 << 41) | (j39 >>> 23);
            jArr[15] = j63;
            long j64 = (j40 << 18) | (j40 >>> 46);
            jArr[c6] = j64;
            long j65 = (j41 << c) | (j41 >>> 63);
            jArr[c] = j65;
            long j66 = (j42 << 44) | (j42 >>> c6);
            jArr[6] = j66;
            long j67 = (j43 << 10) | (j43 >>> 54);
            jArr[11] = j67;
            long j68 = (j44 << 45) | (j44 >>> 19);
            jArr[16] = j68;
            long j69 = (j45 << c2) | (j45 >>> 62);
            jArr[21] = j69;
            long j70 = (j46 << 62) | (j46 >>> c2);
            jArr[c2] = j70;
            long j71 = (j47 << 6) | (j47 >>> 58);
            jArr[7] = j71;
            char c8 = c;
            char c9 = c2;
            long j72 = (j48 << 43) | (j48 >>> 21);
            jArr[c4] = j72;
            char c10 = c3;
            char c11 = c4;
            long j73 = (j49 << 15) | (j49 >>> 49);
            jArr[c5] = j73;
            long j74 = j50 << 61;
            long j75 = j50 >>> 3;
            char c12 = c5;
            char c13 = c6;
            long j76 = j74 | j75;
            jArr[22] = j76;
            long j77 = (j51 << 28) | (j51 >>> 36);
            jArr[3] = j77;
            long j78 = j52 << 55;
            long j79 = j52 >>> 9;
            char c14 = c7;
            int i2 = i;
            long j80 = j78 | j79;
            jArr[c10] = j80;
            long j81 = (j53 << 25) | (j53 >>> 39);
            jArr[13] = j81;
            long j82 = (j54 << 21) | (j54 >>> 43);
            jArr[18] = j82;
            long j83 = (j55 << 56) | (j55 >>> c10);
            jArr[23] = j83;
            long j84 = (j56 << 27) | (j56 >>> 37);
            jArr[4] = j84;
            long j85 = (j57 << c13) | (j57 >>> 44);
            jArr[9] = j85;
            long j86 = (j58 << 39) | (j58 >>> 25);
            jArr[14] = j86;
            long j87 = (j59 << c10) | (j59 >>> 56);
            jArr[19] = j87;
            long j88 = (j60 << 14) | (j60 >>> 50);
            jArr[24] = j88;
            long j89 = j36 ^ (j66 | j72);
            long j90 = j66 ^ ((~j72) | j82);
            long j91 = j72 ^ (j82 & j88);
            long j92 = j82 ^ (j88 | j36);
            long j93 = j88 ^ (j36 & j66);
            jArr[c14] = j89;
            jArr[6] = j90;
            jArr[c11] = j91;
            jArr[18] = j92;
            jArr[24] = j93;
            long j94 = j77 ^ (j85 | j62);
            long j95 = j85 ^ (j62 & j68);
            long j96 = j62 ^ (j68 | (~j76));
            long j97 = j68 ^ (j76 | j77);
            long j98 = j76 ^ (j77 & j85);
            jArr[3] = j94;
            jArr[9] = j95;
            jArr[10] = j96;
            jArr[16] = j97;
            jArr[22] = j98;
            long j99 = ~j87;
            long j100 = j65 ^ (j71 | j81);
            long j101 = j71 ^ (j81 & j87);
            long j102 = j81 ^ (j99 & j64);
            long j103 = j99 ^ (j64 | j65);
            long j104 = j64 ^ (j65 & j71);
            jArr[c8] = j100;
            jArr[7] = j101;
            jArr[13] = j102;
            jArr[19] = j103;
            jArr[c13] = j104;
            long j105 = ~j73;
            long j106 = j84 ^ (j61 & j67);
            long j107 = j61 ^ (j67 | j73);
            long j108 = j67 ^ (j105 | j83);
            long j109 = j105 ^ (j83 & j84);
            long j110 = j83 ^ (j84 | j61);
            jArr[4] = j106;
            jArr[5] = j107;
            jArr[11] = j108;
            jArr[c12] = j109;
            jArr[23] = j110;
            long j111 = ~j80;
            long j112 = j70 ^ (j111 & j86);
            long j113 = j111 ^ (j86 | j63);
            long j114 = j86 ^ (j63 & j69);
            long j115 = j63 ^ (j69 | j70);
            long j116 = j69 ^ (j70 & j80);
            jArr[c9] = j112;
            jArr[c10] = j113;
            jArr[14] = j114;
            jArr[15] = j115;
            jArr[21] = j116;
            long[] jArr2 = this.RC;
            long j117 = j89 ^ jArr2[i2];
            jArr[c14] = j117;
            long j118 = (j90 ^ j95) ^ (j113 ^ (j101 ^ j107));
            long j119 = (((j118 << c8) | (j118 >>> 63)) ^ j116) ^ ((j93 ^ j98) ^ (j104 ^ j110));
            long j120 = (j91 ^ j96) ^ (j114 ^ (j102 ^ j108));
            long j121 = (((j120 << c8) | (j120 >>> 63)) ^ j112) ^ ((j117 ^ j94) ^ (j100 ^ j106));
            long j122 = (j92 ^ j97) ^ (j115 ^ (j103 ^ j109));
            long j123 = (((j122 << c8) | (j122 >>> 63)) ^ j113) ^ ((j90 ^ j95) ^ (j101 ^ j107));
            long j124 = (j93 ^ j98) ^ (j116 ^ (j104 ^ j110));
            long j125 = (((j124 << c8) | (j124 >>> 63)) ^ j114) ^ ((j91 ^ j96) ^ (j102 ^ j108));
            long j126 = (j117 ^ j94) ^ (j112 ^ (j100 ^ j106));
            long j127 = (((j126 << c8) | (j126 >>> 63)) ^ j115) ^ ((j92 ^ j97) ^ (j103 ^ j109));
            long j128 = j117 ^ j119;
            jArr[c14] = j128;
            long j129 = j94 ^ j119;
            jArr[3] = j129;
            long j130 = j100 ^ j119;
            jArr[c8] = j130;
            long j131 = j106 ^ j119;
            jArr[4] = j131;
            long j132 = j112 ^ j119;
            jArr[c9] = j132;
            long j133 = j90 ^ j121;
            jArr[6] = j133;
            long j134 = j95 ^ j121;
            jArr[9] = j134;
            long j135 = j101 ^ j121;
            jArr[7] = j135;
            long j136 = j107 ^ j121;
            jArr[5] = j136;
            long j137 = j113 ^ j121;
            jArr[c10] = j137;
            long j138 = j91 ^ j123;
            jArr[c11] = j138;
            long j139 = j96 ^ j123;
            jArr[10] = j139;
            long j140 = j102 ^ j123;
            jArr[13] = j140;
            long j141 = j108 ^ j123;
            jArr[11] = j141;
            long j142 = j114 ^ j123;
            jArr[14] = j142;
            long j143 = j92 ^ j125;
            jArr[18] = j143;
            long j144 = j97 ^ j125;
            jArr[16] = j144;
            long j145 = j103 ^ j125;
            jArr[19] = j145;
            long j146 = j109 ^ j125;
            jArr[c12] = j146;
            long j147 = j115 ^ j125;
            jArr[15] = j147;
            long j148 = j93 ^ j127;
            jArr[24] = j148;
            long j149 = j98 ^ j127;
            jArr[22] = j149;
            long j150 = j104 ^ j127;
            jArr[c13] = j150;
            long j151 = j110 ^ j127;
            jArr[23] = j151;
            long j152 = j116 ^ j127;
            jArr[21] = j152;
            long j153 = (j129 << 36) | (j129 >>> 28);
            jArr[3] = j153;
            long j154 = (j130 << 3) | (j130 >>> 61);
            jArr[c8] = j154;
            long j155 = (j131 << 41) | (j131 >>> 23);
            jArr[4] = j155;
            long j156 = (j132 << 18) | (j132 >>> 46);
            jArr[c9] = j156;
            long j157 = (j133 << c8) | (j133 >>> 63);
            jArr[6] = j157;
            long j158 = (j134 << 44) | (j134 >>> c13);
            jArr[9] = j158;
            long j159 = (j135 << 10) | (j135 >>> 54);
            jArr[7] = j159;
            long j160 = (j136 << 45) | (j136 >>> 19);
            jArr[5] = j160;
            long j161 = (j137 << c9) | (j137 >>> 62);
            jArr[c10] = j161;
            long j162 = (j138 << 62) | (j138 >>> c9);
            jArr[c11] = j162;
            long j163 = (j139 << 6) | (j139 >>> 58);
            jArr[10] = j163;
            long j164 = (j140 << 43) | (j140 >>> 21);
            jArr[13] = j164;
            long j165 = (j141 << 15) | (j141 >>> 49);
            jArr[11] = j165;
            long j166 = (j142 << 61) | (j142 >>> 3);
            jArr[14] = j166;
            long j167 = (j143 << 28) | (j143 >>> 36);
            jArr[18] = j167;
            long j168 = (j144 << 55) | (j144 >>> 9);
            jArr[16] = j168;
            long j169 = (j145 << 25) | (j145 >>> 39);
            jArr[19] = j169;
            long j170 = (j146 << 21) | (j146 >>> 43);
            jArr[c12] = j170;
            long j171 = (j147 << 56) | (j147 >>> c10);
            jArr[15] = j171;
            long j172 = (j148 << 27) | (j148 >>> 37);
            jArr[24] = j172;
            long j173 = (j149 << c13) | (j149 >>> 44);
            jArr[22] = j173;
            long j174 = (j150 << 39) | (j150 >>> 25);
            jArr[c13] = j174;
            long j175 = (j151 << c10) | (j151 >>> 56);
            jArr[23] = j175;
            long j176 = (j152 << 14) | (j152 >>> 50);
            jArr[21] = j176;
            long j177 = j128 ^ (j158 | j164);
            long j178 = j158 ^ ((~j164) | j170);
            long j179 = j164 ^ (j170 & j176);
            long j180 = j170 ^ (j176 | j128);
            long j181 = j176 ^ (j128 & j158);
            jArr[c14] = j177;
            jArr[9] = j178;
            jArr[13] = j179;
            jArr[c12] = j180;
            jArr[21] = j181;
            long j182 = j167 ^ (j173 | j154);
            long j183 = j173 ^ (j154 & j160);
            long j184 = j154 ^ (j160 | (~j166));
            long j185 = j160 ^ (j166 | j167);
            long j186 = j166 ^ (j167 & j173);
            jArr[18] = j182;
            jArr[22] = j183;
            jArr[c8] = j184;
            jArr[5] = j185;
            jArr[14] = j186;
            long j187 = ~j175;
            long j188 = j157 ^ (j163 | j169);
            long j189 = j163 ^ (j169 & j175);
            long j190 = j169 ^ (j187 & j156);
            long j191 = j187 ^ (j156 | j157);
            long j192 = j156 ^ (j157 & j163);
            jArr[6] = j188;
            jArr[10] = j189;
            jArr[19] = j190;
            jArr[23] = j191;
            jArr[c9] = j192;
            long j193 = ~j165;
            long j194 = j172 ^ (j153 & j159);
            long j195 = j153 ^ (j159 | j165);
            long j196 = j159 ^ (j193 | j171);
            long j197 = j193 ^ (j171 & j172);
            long j198 = j171 ^ (j172 | j153);
            jArr[24] = j194;
            jArr[3] = j195;
            jArr[7] = j196;
            jArr[11] = j197;
            jArr[15] = j198;
            long j199 = ~j168;
            long j200 = j162 ^ (j199 & j174);
            long j201 = j199 ^ (j174 | j155);
            long j202 = j174 ^ (j155 & j161);
            long j203 = j155 ^ (j161 | j162);
            long j204 = j161 ^ (j162 & j168);
            jArr[c11] = j200;
            jArr[16] = j201;
            jArr[c13] = j202;
            jArr[4] = j203;
            jArr[c10] = j204;
            jArr[c14] = j177 ^ jArr2[i2 + 1];
            jArr[5] = j182;
            jArr[18] = j197;
            jArr[11] = j189;
            jArr[10] = j188;
            jArr[6] = j183;
            jArr[22] = j202;
            jArr[c13] = j200;
            jArr[c11] = j190;
            jArr[19] = j198;
            jArr[15] = j194;
            jArr[24] = j204;
            jArr[c10] = j185;
            jArr[c8] = j178;
            jArr[9] = j186;
            jArr[14] = j192;
            jArr[c9] = j179;
            jArr[13] = j191;
            jArr[23] = j203;
            jArr[4] = j181;
            jArr[21] = j201;
            jArr[16] = j195;
            jArr[3] = j180;
            jArr[c12] = j196;
            jArr[7] = j184;
            i = i2 + 2;
            c5 = c12;
            c6 = c13;
            c7 = c14;
            c3 = c10;
            c4 = c11;
            c = c8;
            c2 = c9;
        }
        char c15 = c;
        char c16 = c2;
        char c17 = c3;
        char c18 = c4;
        char c19 = c5;
        char c20 = c6;
        jArr[c15] = ~jArr[c15];
        jArr[c16] = ~jArr[c16];
        jArr[c17] = ~jArr[c17];
        jArr[c18] = ~jArr[c18];
        jArr[c19] = ~jArr[c19];
        jArr[c20] = ~jArr[c20];
    }
}
